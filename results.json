{
  "config": {
    "configFile": "/Users/macuser/Desktop/QA Automation/Playwright Project/playwright.config.ts",
    "rootDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "open": "never"
        }
      ],
      [
        "dot",
        null
      ],
      [
        "line",
        null
      ],
      [
        "list",
        null
      ],
      [
        "json",
        {
          "outputFile": "results.json"
        }
      ],
      [
        "/Users/macuser/Desktop/QA Automation/Playwright Project/node_modules/@testomatio/reporter/lib/adapter/playwright.js",
        {
          "apiKey": "tstmt_sHLPv5i8KW2fA6v5S1BjqAEWaqvo0hWkoA1714290557"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 15000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results",
        "repeatEach": 1,
        "retries": 0,
        "id": "setup",
        "name": "setup",
        "testDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples",
        "testIgnore": [],
        "testMatch": [
          "/.*\\.setup\\.ts/"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results",
        "repeatEach": 1,
        "retries": 0,
        "id": "chromium-with-setup",
        "name": "chromium-with-setup",
        "testDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples",
        "testIgnore": [],
        "testMatch": [
          "*spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results",
        "repeatEach": 1,
        "retries": 0,
        "id": "chromium",
        "name": "chromium",
        "testDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples",
        "testIgnore": [],
        "testMatch": [
          "*spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results",
        "repeatEach": 1,
        "retries": 0,
        "id": "firefox",
        "name": "firefox",
        "testDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples",
        "testIgnore": [],
        "testMatch": [
          "*spec.ts"
        ],
        "timeout": 30000
      },
      {
        "outputDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results",
        "repeatEach": 1,
        "retries": 0,
        "id": "webkit",
        "name": "webkit",
        "testDir": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples",
        "testIgnore": [],
        "testMatch": [
          "*spec.ts"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "version": "1.43.1",
    "workers": 2,
    "webServer": null
  },
  "suites": [
    {
      "title": "auth.setup.ts",
      "file": "auth.setup.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "authorization",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "setup",
              "projectName": "setup",
              "results": [
                {
                  "workerIndex": 0,
                  "status": "passed",
                  "duration": 18109,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-05-10T05:35:32.796Z",
                  "attachments": []
                }
              ],
              "status": "expected"
            }
          ],
          "id": "17e3fe6f4d9d8bd79c6b-fdcf1f07932414ce3029",
          "file": "auth.setup.ts",
          "line": 6,
          "column": 6
        }
      ]
    },
    {
      "title": "HW_22/additional_file.spec.ts",
      "file": "HW_22/additional_file.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "Create user car",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium-with-setup",
              "projectName": "chromium-with-setup",
              "results": [
                {
                  "workerIndex": 1,
                  "status": "failed",
                  "duration": 7082,
                  "error": {
                    "message": "TypeError: Failed to parse URL from /api/cars",
                    "stack": "TypeError: Failed to parse URL from /api/cars\n    at /Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples/HW_22/additional_file.spec.ts:7:24",
                    "location": {
                      "file": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples/HW_22/additional_file.spec.ts",
                      "column": 24,
                      "line": 7
                    },
                    "snippet": "\u001b[0m \u001b[90m  5 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m\"div.panel-page_heading h1\"\u001b[39m))\u001b[33m.\u001b[39mtoHaveText(\u001b[32m\"Garage\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m   \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   \u001b[36mconst\u001b[39m carsResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m'/api/cars'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   expect(carsResponse\u001b[33m.\u001b[39mok)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[90m//   if (!carsResponse.ok || carsResponse.status !== 200) {\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[90m//     throw new Error(`GET request to ${baseURL}/api/cars failed with status ${carsResponse.status}`);\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples/HW_22/additional_file.spec.ts",
                        "column": 24,
                        "line": 7
                      },
                      "message": "TypeError: Failed to parse URL from /api/cars\n\n\u001b[0m \u001b[90m  5 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m\"div.panel-page_heading h1\"\u001b[39m))\u001b[33m.\u001b[39mtoHaveText(\u001b[32m\"Garage\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  6 |\u001b[39m   \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   \u001b[36mconst\u001b[39m carsResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m fetch(\u001b[32m'/api/cars'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 |\u001b[39m   expect(carsResponse\u001b[33m.\u001b[39mok)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[90m//   if (!carsResponse.ok || carsResponse.status !== 200) {\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[90m//     throw new Error(`GET request to ${baseURL}/api/cars failed with status ${carsResponse.status}`);\u001b[39m\u001b[0m\n\n\u001b[2m    at /Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples/HW_22/additional_file.spec.ts:7:24\u001b[22m"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2024-05-10T05:35:55.244Z",
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results/HW_22-additional_file-Create-user-car-chromium-with-setup/test-failed-1.png"
                    },
                    {
                      "name": "video",
                      "contentType": "video/webm",
                      "path": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results/HW_22-additional_file-Create-user-car-chromium-with-setup/video.webm"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/Users/macuser/Desktop/QA Automation/Playwright Project/test-results/HW_22-additional_file-Create-user-car-chromium-with-setup/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/Users/macuser/Desktop/QA Automation/Playwright Project/tests-examples/HW_22/additional_file.spec.ts",
                    "column": 24,
                    "line": 7
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "d3655dd71329e2b2fb02-20a051afb78e77b633a2",
          "file": "HW_22/additional_file.spec.ts",
          "line": 3,
          "column": 5
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2024-05-10T05:35:30.989Z",
    "duration": 32938.72,
    "expected": 1,
    "skipped": 0,
    "unexpected": 1,
    "flaky": 0
  }
}